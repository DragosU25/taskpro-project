{"version":3,"file":"static/js/474.0d500ed4.chunk.js","mappings":"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","sources":["redux/column/selectors.js","webpack://taskpro-project/./src/components/ProjectColumns/ProjectColumns.module.css?825e","redux/card/selectors.js","webpack://taskpro-project/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","webpack://taskpro-project/./src/components/CardsList/CardsList.module.css?bb5f","components/CardsList/CardsList.jsx","webpack://taskpro-project/./src/components/Column/Column.module.css?790f","webpack://taskpro-project/./src/components/CardForm/CardForm.module.css?13f3","components/CardForm/CardForm.jsx","webpack://taskpro-project/./src/components/AddColumnForm/AddColumnForm.module.css?e220","components/AddColumnForm/AddColumnForm.jsx","components/Column/Column.jsx","components/ProjectColumns/ProjectColumns.jsx","webpack://taskpro-project/./src/pages/ProjectDetailsPage/ProjectDetailsPage.module.css?71df","pages/ProjectDetailsPage/ProjectDetailsPage.jsx"],"sourcesContent":["export const selectColumns = (state) => state.columns.columns;\r\n\r\nexport const selectIsLoading = (state) => state.columns.isLoading;\r\n\r\nexport const selectError = (state) => state.columns.error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"column\":\"ProjectColumns_column__+kO0U\",\"text\":\"ProjectColumns_text__HvghR\",\"addContainer\":\"ProjectColumns_addContainer__K3nzj\",\"button\":\"ProjectColumns_button__LslHO\",\"icon\":\"ProjectColumns_icon__9ARtZ\"};","import { createSelector } from \"reselect\";\r\n\r\nexport const selectIsLoading = (state) => state.cards.isLoading;\r\nexport const selectError = (state) => state.cards.error;\r\n\r\nexport const selectCardsByColumn = createSelector(\r\n  (state, columnId) => state.cards.columns[columnId] || [],\r\n  (state) => state.cards.cards,\r\n  (cardIds, allCards) => {\r\n    return cardIds.map((id) => allCards[id]);\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"Card_cardContainer__s03Mx\",\"highPriority\":\"Card_highPriority__V2BsM\",\"mediumPriority\":\"Card_mediumPriority__PihMH\",\"lowPriority\":\"Card_lowPriority__jrbRn\",\"priorityCircle\":\"Card_priorityCircle__7zGsp\",\"high\":\"Card_high__XfacI\",\"medium\":\"Card_medium__ZzgRd\",\"low\":\"Card_low__8GEiw\",\"default\":\"Card_default__0k8bx\",\"detailsContainer\":\"Card_detailsContainer__tQzlS\",\"secondContainer\":\"Card_secondContainer__ziGdE\",\"title\":\"Card_title__td8Dq\",\"text\":\"Card_text__9eW7u\",\"container\":\"Card_container__RZsSe\",\"smallText\":\"Card_smallText__TsInM\",\"priorityStatus\":\"Card_priorityStatus__dtwQX\",\"priority\":\"Card_priority__oWu7w\",\"status\":\"Card_status__HcXGC\",\"icons\":\"Card_icons__wug2B\",\"moveMenu\":\"Card_moveMenu__qSREc\",\"columnList\":\"Card_columnList__71YGx\",\"columnButton\":\"Card_columnButton__AGDWO\"};","import React, { useState } from \"react\";\r\nimport styles from \"./Card.module.css\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectColumns } from \"../../redux/column/selectors\";\r\n\r\nfunction Card({ card, onEdit, onDelete, onMove }) {\r\n  const [showMoveMenu, setShowMoveMenu] = useState(false);\r\n  const columns = useSelector(selectColumns);\r\n\r\n  const priorityClass = `${styles.priorityCircle} ${\r\n    styles[card.cardPriority.toLowerCase()] || styles.default\r\n  }`;\r\n\r\n  const handleMove = (toColumnId) => {\r\n    onMove(card, toColumnId);\r\n    setShowMoveMenu(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardContainer} ${\r\n        styles[`${card.cardPriority.toLowerCase()}Priority`] || \"\"\r\n      }`}\r\n    >\r\n      <div className={styles.detailsContainer}>\r\n        <h4 className={styles.title}>{card.cardName}</h4>\r\n        <p className={styles.text}>{card.cardDescription}</p>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <div className={styles.secondContainer}>\r\n          <div className={styles.priority}>\r\n            <p className={styles.smallText}>Priority:</p>\r\n            <div className={styles.priorityStatus}>\r\n              <div className={priorityClass}></div>\r\n              <span className={styles.status}>{card.cardPriority}</span>\r\n            </div>\r\n          </div>\r\n          <div className={styles.deadline}>\r\n            <p className={styles.smallText}>Deadline:</p>\r\n            <p className={styles.status}>\r\n              {new Date(card.deadlineDate).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.icons}>\r\n          <Icon\r\n            name={\"move\"}\r\n            size={16}\r\n            handlerFunction={() => setShowMoveMenu(!showMoveMenu)}\r\n          />\r\n          <Icon name={\"edit\"} size={16} handlerFunction={() => onEdit(card)} />\r\n          <Icon\r\n            name={\"delete\"}\r\n            size={16}\r\n            handlerFunction={() => onDelete(card)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {showMoveMenu && (\r\n        <div className={styles.moveMenu}>\r\n          <ul className={styles.columnList}>\r\n            {columns\r\n              .filter((column) => column._id !== card.columnId)\r\n              .map((column) => (\r\n                <li key={column._id} className={styles.columnItem}>\r\n                  <button\r\n                    className={styles.columnButton}\r\n                    onClick={() => handleMove(column._id)}\r\n                  >\r\n                    {column.name}\r\n                    <Icon name={\"move\"} size={16} extraClass={styles.icon} />\r\n                  </button>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CardsList_container__tsRnB\"};","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport styles from \"./CardsList.module.css\";\r\n\r\nfunction CardList({ cards, onEdit, onDelete, onMove }) {\r\n  return (\r\n    <div className={styles.container}>\r\n      {cards.map((card) => (\r\n        <Card\r\n          key={card._id}\r\n          card={card}\r\n          onEdit={() => onEdit(card)}\r\n          onDelete={() => onDelete(card._id)}\r\n          onMove={(card, toColumnId) => onMove(card, toColumnId)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"columnNameContainer\":\"Column_columnNameContainer__xnkj1\",\"name\":\"Column_name__n0Gkp\",\"iconContainer\":\"Column_iconContainer__1iGIa\",\"addIconContainer\":\"Column_addIconContainer__euYja\",\"icon\":\"Column_icon__Ef0lm\",\"text\":\"Column_text__rtuyU\",\"button\":\"Column_button__OQwSW\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"CardForm_title__jQe7-\",\"textarea\":\"CardForm_textarea__vJxPE\",\"priorityContainer\":\"CardForm_priorityContainer__NlkH0\",\"label\":\"CardForm_label__uiV3+\",\"priorityOptions\":\"CardForm_priorityOptions__kFCgX\",\"priorityBubble\":\"CardForm_priorityBubble__ZG62I\",\"low\":\"CardForm_low__KYMIv\",\"medium\":\"CardForm_medium__EPSVG\",\"high\":\"CardForm_high__JTvQE\",\"without\":\"CardForm_without__Nc1iU\",\"selected\":\"CardForm_selected__mfe+4\",\"dateContainer\":\"CardForm_dateContainer__93ji5\",\"deadlineContainer\":\"CardForm_deadlineContainer__YW5xq\",\"dateInput\":\"CardForm_dateInput__xnIdh\",\"button\":\"CardForm_button__Knqxb\",\"iconContainer\":\"CardForm_iconContainer__VWiX+\",\"icon\":\"CardForm_icon__SSn4W\",\"dateButton\":\"CardForm_dateButton__U1bnt\",\"arrowIcon\":\"CardForm_arrowIcon__r1T6E\"};","import React, { useState } from \"react\";\r\nimport Button from \"../common/Button/Button\";\r\nimport InputField from \"../common/InputField/InputField\";\r\nimport styles from \"./CardForm.module.css\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { HiChevronDown } from \"react-icons/hi\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\n\r\nconst CardForm = ({ columnId, handleClose, onSubmit, card }) => {\r\n  const [cardData, setCardData] = useState({\r\n    cardName: card?.cardName || \"\",\r\n    cardDescription: card?.cardDescription || \"\",\r\n    cardPriority: card?.cardPriority || \"Low\",\r\n    deadlineDate: card?.cardDeadline || \"\",\r\n  });\r\n\r\n  const [isCalendarVisible, setIsCalendarVisible] = useState(false);\r\n\r\n  const getFormattedDate = () => {\r\n    if (!cardData.deadlineDate) {\r\n      return (\r\n        \"Today, \" +\r\n        new Date().toLocaleDateString(\"en-US\", {\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n        })\r\n      );\r\n    }\r\n    return new Date(cardData.deadlineDate).toLocaleDateString(\"en-US\", {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n  const handleChangeDate = (date) => {\r\n    setCardData((prevState) => ({\r\n      ...prevState,\r\n      deadlineDate: date,\r\n    }));\r\n    setIsCalendarVisible(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCardData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePriorityChange = (priority) => {\r\n    setCardData((prevState) => ({\r\n      ...prevState,\r\n      cardPriority: priority,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(cardData);\r\n    handleClose();\r\n  };\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <h2 className={styles.title}>{card ? \"Edit Card\" : \"Add Card\"}</h2>\r\n\r\n      <InputField\r\n        type=\"text\"\r\n        name={\"cardName\"}\r\n        placeholder={\"Title\"}\r\n        value={cardData.cardName}\r\n        handleChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <textarea\r\n        className={styles.textarea}\r\n        name=\"cardDescription\"\r\n        placeholder=\"Description\"\r\n        value={cardData.cardDescription}\r\n        onChange={handleChange}\r\n        required\r\n      ></textarea>\r\n\r\n      <div className={styles.priorityContainer}>\r\n        <label className={styles.label}>Label color</label>\r\n        <div className={styles.priorityOptions}>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.low} ${\r\n              cardData.cardPriority === \"Low\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"Low\")}\r\n          ></div>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.medium} ${\r\n              cardData.cardPriority === \"Medium\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"Medium\")}\r\n          ></div>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.high} ${\r\n              cardData.cardPriority === \"High\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"High\")}\r\n          ></div>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.without} ${\r\n              cardData.cardPriority === \"Without\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"Without\")}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.deadlineContainer}>\r\n        <label className={styles.label}>Deadline</label>\r\n        <div className={styles.dateContainer}>\r\n          <input\r\n            type=\"text\"\r\n            value={getFormattedDate()}\r\n            readOnly\r\n            className={styles.dateInput}\r\n          />\r\n          <div style={{ position: \"relative\" }}>\r\n            {\" \"}\r\n            <HiChevronDown\r\n              className={styles.arrowIcon}\r\n              onClick={() => setIsCalendarVisible(true)}\r\n            />\r\n            {isCalendarVisible && (\r\n              <div className=\"datePickerContainer\">\r\n                {\" \"}\r\n                <DatePicker\r\n                  selected={\r\n                    cardData.deadlineDate\r\n                      ? new Date(cardData.deadlineDate)\r\n                      : new Date()\r\n                  }\r\n                  onChange={handleChangeDate}\r\n                  minDate={new Date()}\r\n                  dateFormat=\"MMMM d, yyyy\"\r\n                  className={styles.reactDatePicker}\r\n                  todayButton=\"Today\"\r\n                  inline\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Button type=\"submit\" extraClass={styles.button}>\r\n          <div className={styles.iconContainer}>\r\n            <Icon\r\n              name={card ? \"edit\" : \"plus\"}\r\n              size={14}\r\n              extraClass={styles.icon}\r\n            />\r\n          </div>\r\n          {card ? \"Edit\" : \"Add\"}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AddColumnForm_title__05V3n\",\"button\":\"AddColumnForm_button__yMLFf\",\"iconContainer\":\"AddColumnForm_iconContainer__TBlfJ\",\"icon\":\"AddColumnForm_icon__0BxgM\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  addColumn,\r\n  editColumn,\r\n  getColumns,\r\n} from \"../../redux/column/operators\";\r\nimport styles from \"./AddColumnForm.module.css\";\r\nimport InputField from \"../common/InputField/InputField\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\n\r\nfunction AddColumnForm({ handleModalClose, column = null }) {\r\n  const { id: projectId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const [columnName, setColumnName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (column) {\r\n      setColumnName(column.columnName || \"\");\r\n    }\r\n  }, [column]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setColumnName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      if (column) {\r\n        const columnId = column._id;\r\n        const result = await dispatch(\r\n          dispatch(\r\n            editColumn({\r\n              columnId,\r\n              updateData: { columnName: columnName },\r\n            })\r\n          )\r\n        );\r\n        if (editColumn.rejected.match(result)) {\r\n          setError(result.payload?.message || \"Failed to edit column.\");\r\n        } else {\r\n          dispatch(getColumns(projectId));\r\n          handleModalClose();\r\n        }\r\n      } else {\r\n        // Adăugare coloană\r\n        const result = await dispatch(addColumn({ columnName, projectId }));\r\n        if (addColumn.rejected.match(result)) {\r\n          setError(result.payload?.message || \"Failed to add column.\");\r\n        } else {\r\n          dispatch(getColumns(projectId));\r\n          handleModalClose();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(\"An unexpected error occurred.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{column ? \"Edit Column\" : \"Add Column\"}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputField\r\n          placeholder=\"Title\"\r\n          value={columnName}\r\n          handleChange={handleInputChange}\r\n        />\r\n        {error && <p className={styles.error}>{error}</p>}\r\n        <Button extraClass={styles.button} type=\"submit\">\r\n          <div className={styles.iconContainer}>\r\n            <Icon\r\n              name={column ? \"edit\" : \"plus\"}\r\n              size={16}\r\n              extraClass={styles.icon}\r\n            />\r\n          </div>\r\n          {column ? \"Save Changes\" : \"Add\"}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddColumnForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addCard,\r\n  deleteCard,\r\n  editCard,\r\n  getCards,\r\n  moveCard,\r\n} from \"../../redux/card/operators\";\r\nimport { selectCardsByColumn } from \"../../redux/card/selectors\";\r\nimport CardList from \"../CardsList/CardsList\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\nimport styles from \"./Column.module.css\";\r\nimport CardForm from \"../CardForm/CardForm\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Modal from \"../common/Modal/Modal\";\r\nimport AddColumnForm from \"../AddColumnForm/AddColumnForm\";\r\nimport { deleteColumn } from \"../../redux/column/operators\";\r\nimport DeleteModal from \"../DeleteCardModal/DeleteModal\";\r\n\r\nconst Column = React.memo(({ column }) => {\r\n  const dispatch = useDispatch();\r\n  const cards = useSelector((state) => selectCardsByColumn(state, column._id));\r\n\r\n  const [modalContent, setModalContent] = useState(null);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleModalOpen = (content) => {\r\n    if (typeof content !== \"function\") {\r\n      console.error(\r\n        \"The content passed to the modal is not a valid component.\"\r\n      );\r\n    }\r\n    setModalContent(content);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalContent(null);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleAddCard = () => {\r\n    handleModalOpen(\r\n      <CardForm\r\n        columnId={column._id}\r\n        handleClose={handleModalClose}\r\n        onSubmit={(cardData) => {\r\n          dispatch(addCard({ cardData, columnId: column._id }))\r\n            .unwrap()\r\n            .then((newCard) => {\r\n              dispatch({\r\n                type: \"cards/columnAddedCard\",\r\n                payload: { columnId: column._id, cardId: newCard._id },\r\n              });\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Failed to add card:\", error);\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleDeleteCard = (cardId) => {\r\n    const columnId = column._id;\r\n\r\n    handleModalOpen(\r\n      <DeleteModal\r\n        title=\"Delete Card\"\r\n        message=\"Are you sure you want to delete this card?\"\r\n        handleModalClose={handleModalClose}\r\n        onConfirm={() =>\r\n          dispatch(deleteCard({ columnId, cardId }))\r\n            .unwrap()\r\n            .then(() => console.log(\"Card deleted successfully\"))\r\n            .catch((error) => console.error(\"Failed to delete card:\", error))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleEditCard = (card) => {\r\n    handleModalOpen(\r\n      <CardForm\r\n        card={card}\r\n        columnId={column._id}\r\n        handleClose={handleModalClose}\r\n        onSubmit={(cardData) => {\r\n          dispatch(\r\n            editCard({\r\n              updatedData: cardData,\r\n              columnId: column._id,\r\n              cardId: card._id,\r\n            })\r\n          )\r\n            .unwrap()\r\n            .then(() => {\r\n              console.log(\"Card edited successfully\");\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Failed to edit card:\", error);\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleEditColumn = () => {\r\n    handleModalOpen(\r\n      <AddColumnForm handleModalClose={handleModalClose} column={column} />\r\n    );\r\n  };\r\n\r\n  const handleMoveCard = (toColumnId, card) => {\r\n    dispatch(\r\n      moveCard({ toColumnId, cardId: card._id, fromColumnId: card.columnId })\r\n    )\r\n      .unwrap()\r\n      .then(() => console.log(\"✅ Card moved successfully\"))\r\n      .catch((error) => console.error(\"❌ Failed to move card:\", error));\r\n  };\r\n\r\n  const handleDeleteColumn = () => {\r\n    handleModalOpen(\r\n      <DeleteModal\r\n        title=\"Delete Column\"\r\n        message=\"Are you sure you want to delete this column?\"\r\n        handleModalClose={handleModalClose}\r\n        onConfirm={() =>\r\n          dispatch(deleteColumn(column._id))\r\n            .unwrap()\r\n            .then(() => console.log(\"Column deleted successfully\"))\r\n            .catch((error) => console.error(\"Failed to delete column:\", error))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getCards(column._id));\r\n  }, [dispatch, column._id]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.columnNameContainer}>\r\n          <h3 className={styles.name}>{column.name}</h3>\r\n          <div className={styles.iconContainer}>\r\n            <Icon name={\"edit\"} size={16} handlerFunction={handleEditColumn} />\r\n            <Icon\r\n              name={\"delete\"}\r\n              size={16}\r\n              handlerFunction={handleDeleteColumn}\r\n            />\r\n          </div>\r\n        </div>\r\n        <CardList\r\n          cards={cards || []}\r\n          onEdit={handleEditCard}\r\n          onDelete={(cardId) => {\r\n            handleDeleteCard(cardId);\r\n          }}\r\n          onMove={(card, toColumnId) => handleMoveCard(toColumnId, card)}\r\n        />\r\n\r\n        <Button extraClass={styles.button} handlerFunction={handleAddCard}>\r\n          <div className={styles.addIconContainer}>\r\n            <Icon name={\"plus\"} size={14} extraClass={styles.icon} />\r\n          </div>\r\n          {cards ? (\r\n            <p className={styles.text}>Add a new Card</p>\r\n          ) : (\r\n            <p className={styles.text}>Add another card</p>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal\r\n        isVisible={isModalVisible}\r\n        handleModalClose={handleModalClose}\r\n        extraClass={styles.modal}\r\n      >\r\n        {modalContent}{\" \"}\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Column;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getColumns } from \"../../redux/column/operators\";\r\nimport {\r\n  selectColumns,\r\n  selectIsLoading,\r\n  selectError,\r\n} from \"../../redux/column/selectors\";\r\nimport styles from \"./ProjectColumns.module.css\";\r\nimport Column from \"../Column/Column\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\nimport Modal from \"../common/Modal/Modal\";\r\nimport AddColumnForm from \"../AddColumnForm/AddColumnForm\";\r\nimport { resetColumnsState } from \"../../redux/column/slice\";\r\n\r\nfunction ProjectColumns() {\r\n  const { id: projectId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const columns = useSelector(selectColumns);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  const [modalContent, setModalContent] = useState(null);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleModalOpen = (content) => {\r\n    if (content) {\r\n      setModalContent(content);\r\n      setModalVisible(true);\r\n    } else {\r\n      console.error(\"Invalid content passed to modal.\");\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalContent(null);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    handleModalOpen(<AddColumnForm handleModalClose={handleModalClose} />);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(resetColumnsState());\r\n    if (projectId) {\r\n      dispatch(getColumns(projectId));\r\n    }\r\n    return () => {\r\n      dispatch(resetColumnsState());\r\n    };\r\n  }, [dispatch, projectId]);\r\n\r\n  if (isLoading) return <p>Loading columns...</p>;\r\n  if (error) return <p>Error loading columns: {error}</p>;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.column}>\r\n        {columns.map((column) => (\r\n          <Column key={column._id} column={column} />\r\n        ))}\r\n        <div className={styles.addContainer}>\r\n          <Button extraClass={styles.button} handlerFunction={handleAddColumn}>\r\n            <Icon name={\"plus\"} size={14} extraClass={styles.icon} />\r\n          </Button>\r\n\r\n          <p className={styles.text}> Add another column</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isVisible={isModalVisible}\r\n        handleModalClose={handleModalClose}\r\n        extraClass={styles.modal}\r\n      >\r\n        {modalContent ? modalContent : null}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectColumns;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ProjectDetailsPage_title__YoI9W\",\"container\":\"ProjectDetailsPage_container__O-8Ad\",\"infoContainer\":\"ProjectDetailsPage_infoContainer__SpcWN\",\"errorMessage\":\"ProjectDetailsPage_errorMessage__RMLVr\"};","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProjectColumns from \"../../components/ProjectColumns/ProjectColumns\";\r\nimport styles from \"./ProjectDetailsPage.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectProject } from \"../../redux/project/selectors\";\r\n\r\nfunction ProjectDetailsPage() {\r\n  const { id } = useParams();\r\n  const projects = useSelector((state) => selectProject(state, id));\r\n\r\n  const project = projects?.find((p) => p._id === id);\r\n\r\n  const backgroundUrl = project?.background\r\n    ? `${process.env.PUBLIC_URL}/backgroundsImg/${project.background}.jpeg`\r\n    : null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: backgroundUrl ? `url(${backgroundUrl})` : \"none\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        minHeight: \"100%\",\r\n        transition: \"background 0.3s ease\",\r\n      }}\r\n      className={styles.container}\r\n    >\r\n      <h2 className={styles.title}>{project?.name}</h2>\r\n\r\n      {project ? (\r\n        <ProjectColumns projectId={id} />\r\n      ) : (\r\n        <div className={styles.infoContainer}>\r\n          <p className={styles.errorMessage}>\r\n            Before starting your project, it is essential{\" \"}\r\n            <span>to create a board </span>to visualize and track all the\r\n            necessary tasks and milestones. This board serves as a powerful tool\r\n            to organize the workflow and ensure effective collaboration among\r\n            team members.\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetailsPage;\r\n"],"names":["selectColumns","state","columns","selectIsLoading","isLoading","selectError","error","selectCardsByColumn","createSelector","columnId","cards","cardIds","allCards","map","id","_ref","card","onEdit","onDelete","onMove","showMoveMenu","setShowMoveMenu","useState","useSelector","priorityClass","concat","styles","priorityCircle","cardPriority","toLowerCase","_jsxs","className","cardContainer","children","detailsContainer","_jsx","title","cardName","text","cardDescription","container","secondContainer","priority","smallText","priorityStatus","status","deadline","Date","deadlineDate","toLocaleDateString","icons","Icon","name","size","handlerFunction","moveMenu","columnList","filter","column","_id","columnItem","columnButton","onClick","handleMove","toColumnId","extraClass","icon","Card","handleClose","onSubmit","cardData","setCardData","cardDeadline","isCalendarVisible","setIsCalendarVisible","handleChange","e","value","target","prevState","_objectSpread","handlePriorityChange","preventDefault","InputField","type","placeholder","required","textarea","onChange","priorityContainer","label","priorityOptions","priorityBubble","low","selected","medium","high","without","deadlineContainer","dateContainer","month","day","readOnly","dateInput","style","position","HiChevronDown","arrowIcon","DatePicker","date","minDate","dateFormat","reactDatePicker","todayButton","inline","Button","button","iconContainer","handleModalClose","projectId","useParams","dispatch","useDispatch","columnName","setColumnName","setError","useEffect","async","result","editColumn","updateData","_result$payload","rejected","match","payload","message","getColumns","addColumn","_result$payload2","err","React","modalContent","setModalContent","isModalVisible","setModalVisible","handleModalOpen","content","console","getCards","_Fragment","columnNameContainer","handleEditColumn","AddColumnForm","handleDeleteColumn","DeleteModal","onConfirm","deleteColumn","unwrap","then","log","catch","CardList","CardForm","editCard","updatedData","cardId","deleteCard","handleDeleteCard","handleMoveCard","moveCard","fromColumnId","handleAddCard","addCard","newCard","addIconContainer","Modal","isVisible","modal","resetColumnsState","Column","addContainer","handleAddColumn","projects","selectProject","project","find","p","backgroundUrl","background","process","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","transition","ProjectColumns"],"sourceRoot":""}
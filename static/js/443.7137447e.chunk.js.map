{"version":3,"file":"static/js/443.7137447e.chunk.js","mappings":"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","sources":["redux/column/selectors.js","webpack://taskpro-project/./src/components/ProjectColumns/ProjectColumns.module.css?825e","redux/card/selectors.js","webpack://taskpro-project/./src/components/Card/Card.module.css?4f06","components/Card/Card.jsx","webpack://taskpro-project/./src/components/CardsList/CardsList.module.css?bb5f","components/CardsList/CardsList.jsx","webpack://taskpro-project/./src/components/Column/Column.module.css?790f","webpack://taskpro-project/./src/components/CardForm/CardForm.module.css?13f3","components/CardForm/CardForm.jsx","webpack://taskpro-project/./src/components/AddColumnForm/AddColumnForm.module.css?e220","components/AddColumnForm/AddColumnForm.jsx","webpack://taskpro-project/./src/components/DeleteCardModal/DeleteModa.module.css?789f","components/DeleteCardModal/DeleteModal.jsx","components/Column/Column.jsx","components/ProjectColumns/ProjectColumns.jsx","webpack://taskpro-project/./src/pages/ProjectDetailsPage/ProjectDetailsPage.module.css?71df","pages/ProjectDetailsPage/ProjectDetailsPage.jsx"],"sourcesContent":["export const selectColumns = (state) => state.columns.columns;\r\n\r\nexport const selectIsLoading = (state) => state.columns.isLoading;\r\n\r\nexport const selectError = (state) => state.columns.error;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"column\":\"ProjectColumns_column__+kO0U\",\"text\":\"ProjectColumns_text__HvghR\",\"addContainer\":\"ProjectColumns_addContainer__K3nzj\",\"button\":\"ProjectColumns_button__LslHO\",\"icon\":\"ProjectColumns_icon__9ARtZ\"};","export const selectIsLoading = (state) => state.cards.isLoading;\r\nexport const selectError = (state) => state.cards.error;\r\n\r\n// export const selectCardsByColumn = createSelector(\r\n//   // Input selectors\r\n//   (state) => state.cards.cardsByColumn,\r\n//   (_, columnId) => columnId,\r\n//   // Output selector\r\n//   (cardsByColumn, columnId) => cardsByColumn[columnId] || []\r\n// );\r\n\r\nexport const selectCardsByColumn = (state, columnId) => {\r\n  const cardIds = state.cards.columns[columnId] || []; // Obține ID-urile cardurilor din coloană\r\n  return cardIds.map((id) => state.cards.cards[id]); // Mapăm ID-urile către detaliile cardurilor\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"Card_cardContainer__s03Mx\",\"highPriority\":\"Card_highPriority__V2BsM\",\"mediumPriority\":\"Card_mediumPriority__PihMH\",\"lowPriority\":\"Card_lowPriority__jrbRn\",\"priorityCircle\":\"Card_priorityCircle__7zGsp\",\"high\":\"Card_high__XfacI\",\"medium\":\"Card_medium__ZzgRd\",\"low\":\"Card_low__8GEiw\",\"default\":\"Card_default__0k8bx\",\"detailsContainer\":\"Card_detailsContainer__tQzlS\",\"secondContainer\":\"Card_secondContainer__ziGdE\",\"title\":\"Card_title__td8Dq\",\"text\":\"Card_text__9eW7u\",\"container\":\"Card_container__RZsSe\",\"smallText\":\"Card_smallText__TsInM\",\"priorityStatus\":\"Card_priorityStatus__dtwQX\",\"priority\":\"Card_priority__oWu7w\",\"status\":\"Card_status__HcXGC\",\"icons\":\"Card_icons__wug2B\"};","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\n\r\nfunction Card({ card, onEdit, onDelete, onMove }) {\r\n  // Generează clasa pentru bulina de prioritate\r\n  const priorityClass = `${styles.priorityCircle} ${\r\n    styles[card.cardPriority.toLowerCase()] || styles.default\r\n  }`;\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardContainer} ${\r\n        styles[`${card.cardPriority.toLowerCase()}Priority`] || \"\"\r\n      }`}\r\n    >\r\n      <div className={styles.detailsContainer}>\r\n        <h4 className={styles.title}>{card.cardName}</h4>\r\n        <p className={styles.text}>{card.cardDescription}</p>\r\n      </div>\r\n      <div className={styles.container}>\r\n        <div className={styles.secondContainer}>\r\n          <div className={styles.priority}>\r\n            <p className={styles.smallText}>Priority:</p>\r\n            <div className={styles.priorityStatus}>\r\n              <div className={priorityClass}></div>\r\n              <span className={styles.status}>{card.cardPriority}</span>\r\n            </div>\r\n          </div>\r\n          <div className={styles.deadline}>\r\n            <p className={styles.smallText}>Deadline:</p>\r\n            <p className={styles.status}>\r\n              {new Date(card.deadlineDate).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.icons}>\r\n          <Icon name={\"move\"} size={16} handlerFunction={() => onMove(card)} />\r\n          <Icon name={\"edit\"} size={16} handlerFunction={() => onEdit(card)} />\r\n          <Icon\r\n            name={\"delete\"}\r\n            size={16}\r\n            handlerFunction={() => onDelete(card)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CardsList_container__tsRnB\"};","import React from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport styles from \"./CardsList.module.css\";\r\n\r\nfunction CardList({ cards, onEdit, onDelete, onMove }) {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card._id}\r\n            card={card}\r\n            onEdit={() => onEdit(card)}\r\n            onDelete={() => onDelete(card._id)}\r\n            onMove={onMove}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"columnNameContainer\":\"Column_columnNameContainer__xnkj1\",\"name\":\"Column_name__n0Gkp\",\"iconContainer\":\"Column_iconContainer__1iGIa\",\"addContainer\":\"Column_addContainer__X9y6m\",\"addIconContainer\":\"Column_addIconContainer__euYja\",\"icon\":\"Column_icon__Ef0lm\",\"text\":\"Column_text__rtuyU\",\"button\":\"Column_button__OQwSW\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"CardForm_title__jQe7-\",\"textarea\":\"CardForm_textarea__vJxPE\",\"priorityContainer\":\"CardForm_priorityContainer__NlkH0\",\"label\":\"CardForm_label__uiV3+\",\"priorityOptions\":\"CardForm_priorityOptions__kFCgX\",\"priorityBubble\":\"CardForm_priorityBubble__ZG62I\",\"low\":\"CardForm_low__KYMIv\",\"medium\":\"CardForm_medium__EPSVG\",\"high\":\"CardForm_high__JTvQE\",\"without\":\"CardForm_without__Nc1iU\",\"selected\":\"CardForm_selected__mfe+4\",\"dateContainer\":\"CardForm_dateContainer__93ji5\",\"deadlineContainer\":\"CardForm_deadlineContainer__YW5xq\",\"dateInput\":\"CardForm_dateInput__xnIdh\",\"button\":\"CardForm_button__Knqxb\",\"iconContainer\":\"CardForm_iconContainer__VWiX+\",\"icon\":\"CardForm_icon__SSn4W\",\"dateButton\":\"CardForm_dateButton__U1bnt\",\"arrowIcon\":\"CardForm_arrowIcon__r1T6E\"};","import React, { useState } from \"react\";\r\nimport Button from \"../common/Button/Button\";\r\nimport InputField from \"../common/InputField/InputField\";\r\nimport styles from \"./CardForm.module.css\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { HiChevronDown } from \"react-icons/hi\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\n\r\nconst CardForm = ({ columnId, handleClose, onSubmit, card }) => {\r\n  const [cardData, setCardData] = useState({\r\n    cardName: card?.cardName || \"\",\r\n    cardDescription: card?.cardDescription || \"\",\r\n    cardPriority: card?.cardPriority || \"Low\", // Prioritate implicită\r\n    deadlineDate: card?.cardDeadline || \"\", // Asigură-te că este corect setat\r\n  });\r\n\r\n  const [isCalendarVisible, setIsCalendarVisible] = useState(false); // Stare pentru a controla calendarul\r\n\r\n  // Funcție pentru a obține data curentă în formatul \"Today, Month Day\"\r\n  const getFormattedDate = () => {\r\n    if (!cardData.deadlineDate) {\r\n      return (\r\n        \"Today, \" +\r\n        new Date().toLocaleDateString(\"en-US\", {\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n        })\r\n      );\r\n    }\r\n    return new Date(cardData.deadlineDate).toLocaleDateString(\"en-US\", {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n  const handleChangeDate = (date) => {\r\n    setCardData((prevState) => ({\r\n      ...prevState,\r\n      deadlineDate: date,\r\n    }));\r\n    setIsCalendarVisible(false); // Închidem calendarul după selectarea unei date\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCardData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePriorityChange = (priority) => {\r\n    setCardData((prevState) => ({\r\n      ...prevState,\r\n      cardPriority: priority,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (card) {\r\n      console.log(\"Editing card:\", cardData); // Log pentru editare\r\n    } else {\r\n      console.log(\"Adding card:\", cardData); // Log pentru adăugare\r\n    }\r\n\r\n    onSubmit(cardData); // Trimite datele cardului către callback\r\n    handleClose(); // Închide modalul\r\n  };\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <h2 className={styles.title}>{card ? \"Edit Card\" : \"Add Card\"}</h2>\r\n\r\n      <InputField\r\n        type=\"text\"\r\n        name={\"cardName\"}\r\n        placeholder={\"Title\"}\r\n        value={cardData.cardName}\r\n        handleChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <textarea\r\n        className={styles.textarea}\r\n        name=\"cardDescription\"\r\n        placeholder=\"Description\"\r\n        value={cardData.cardDescription}\r\n        onChange={handleChange}\r\n        required\r\n      ></textarea>\r\n\r\n      <div className={styles.priorityContainer}>\r\n        <label className={styles.label}>Label color</label>\r\n        <div className={styles.priorityOptions}>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.low} ${\r\n              cardData.cardPriority === \"Low\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"Low\")}\r\n          ></div>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.medium} ${\r\n              cardData.cardPriority === \"Medium\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"Medium\")}\r\n          ></div>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.high} ${\r\n              cardData.cardPriority === \"High\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"High\")}\r\n          ></div>\r\n          <div\r\n            className={`${styles.priorityBubble} ${styles.without} ${\r\n              cardData.cardPriority === \"Without\" ? styles.selected : \"\"\r\n            }`}\r\n            onClick={() => handlePriorityChange(\"Without\")}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.deadlineContainer}>\r\n        <label className={styles.label}>Deadline</label>\r\n        <div className={styles.dateContainer}>\r\n          <input\r\n            type=\"text\"\r\n            value={getFormattedDate()}\r\n            readOnly\r\n            className={styles.dateInput}\r\n          />\r\n          <div style={{ position: \"relative\" }}>\r\n            {\" \"}\r\n            {/* Container relativ pentru poziționare absolută */}\r\n            <HiChevronDown\r\n              className={styles.arrowIcon}\r\n              onClick={() => setIsCalendarVisible(true)}\r\n            />\r\n            {isCalendarVisible && (\r\n              <div className=\"datePickerContainer\">\r\n                {\" \"}\r\n                {/* Adăugăm clasa stilizată */}\r\n                <DatePicker\r\n                  selected={\r\n                    cardData.deadlineDate\r\n                      ? new Date(cardData.deadlineDate)\r\n                      : new Date()\r\n                  }\r\n                  onChange={handleChangeDate}\r\n                  minDate={new Date()}\r\n                  dateFormat=\"MMMM d, yyyy\"\r\n                  className={styles.reactDatePicker}\r\n                  todayButton=\"Today\"\r\n                  inline\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Button type=\"submit\" extraClass={styles.button}>\r\n          <div className={styles.iconContainer}>\r\n            <Icon\r\n              name={card ? \"edit\" : \"plus\"}\r\n              size={14}\r\n              extraClass={styles.icon}\r\n            />\r\n          </div>\r\n          {card ? \"Edit\" : \"Add\"}\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CardForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"AddColumnForm_title__05V3n\",\"button\":\"AddColumnForm_button__yMLFf\",\"iconContainer\":\"AddColumnForm_iconContainer__TBlfJ\",\"icon\":\"AddColumnForm_icon__0BxgM\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  addColumn,\r\n  editColumn,\r\n  getColumns,\r\n} from \"../../redux/column/operators\";\r\nimport styles from \"./AddColumnForm.module.css\";\r\nimport InputField from \"../common/InputField/InputField\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\n\r\nfunction AddColumnForm({ handleModalClose, column = null }) {\r\n  const { id: projectId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const [columnName, setColumnName] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (column) {\r\n      setColumnName(column.columnName || \"\");\r\n    }\r\n  }, [column]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setColumnName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      if (column) {\r\n        // Editare coloană\r\n        const columnId = column._id;\r\n        const result = await dispatch(\r\n          dispatch(\r\n            editColumn({\r\n              columnId,\r\n              updateData: { columnName: columnName },\r\n            })\r\n          )\r\n        );\r\n        if (editColumn.rejected.match(result)) {\r\n          setError(result.payload?.message || \"Failed to edit column.\");\r\n        } else {\r\n          dispatch(getColumns(projectId));\r\n          handleModalClose();\r\n        }\r\n      } else {\r\n        // Adăugare coloană\r\n        const result = await dispatch(addColumn({ columnName, projectId }));\r\n        if (addColumn.rejected.match(result)) {\r\n          setError(result.payload?.message || \"Failed to add column.\");\r\n        } else {\r\n          dispatch(getColumns(projectId));\r\n          handleModalClose();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(\"An unexpected error occurred.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>{column ? \"Edit Column\" : \"Add Column\"}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputField\r\n          placeholder=\"Title\"\r\n          value={columnName}\r\n          handleChange={handleInputChange}\r\n        />\r\n        {error && <p className={styles.error}>{error}</p>}\r\n        <Button extraClass={styles.button} type=\"submit\">\r\n          <div className={styles.iconContainer}>\r\n            <Icon\r\n              name={column ? \"edit\" : \"plus\"}\r\n              size={16}\r\n              extraClass={styles.icon}\r\n            />\r\n          </div>\r\n          {column ? \"Save Changes\" : \"Add\"}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddColumnForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"buttons\":\"DeleteModa_buttons__Sn7Gc\",\"text\":\"DeleteModa_text__7JuEP\",\"modalContent\":\"DeleteModa_modalContent__SwsBl\",\"title\":\"DeleteModa_title__g7djc\"};","import React from \"react\";\r\nimport Button from \"../common/Button/Button\";\r\nimport styles from \"./DeleteModa.module.css\";\r\n\r\nfunction DeleteModal({ title, message, onConfirm, handleModalClose }) {\r\n  const handleConfirm = async () => {\r\n    try {\r\n      await onConfirm(); // Execută funcția de confirmare transmisă ca prop\r\n      handleModalClose(); // Închide modalul după succes\r\n    } catch (error) {\r\n      console.error(\"Error in DeleteModal:\", error); // Gestionează eventuale erori\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.modalContent}>\r\n      <h3 className={styles.title}>{title || \"Confirm Action\"}</h3>\r\n      <p className={styles.text}>\r\n        {message || \"Are you sure you want to proceed?\"}\r\n      </p>\r\n      <div className={styles.buttons}>\r\n        <Button onClick={handleConfirm}>Yes</Button>\r\n        <Button onClick={handleModalClose}>No</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addCard,\r\n  deleteCard,\r\n  editCard,\r\n  getCards,\r\n} from \"../../redux/card/operators\";\r\nimport { selectCardsByColumn } from \"../../redux/card/selectors\";\r\nimport CardList from \"../CardsList/CardsList\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\nimport styles from \"./Column.module.css\";\r\nimport CardForm from \"../CardForm/CardForm\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Modal from \"../common/Modal/Modal\";\r\nimport AddColumnForm from \"../AddColumnForm/AddColumnForm\";\r\nimport { deleteColumn } from \"../../redux/column/operators\";\r\nimport DeleteModal from \"../DeleteCardModal/DeleteModal\";\r\n\r\nconst Column = ({ column }) => {\r\n  const dispatch = useDispatch();\r\n  const cards = useSelector((state) => selectCardsByColumn(state, column._id));\r\n\r\n  const [modalContent, setModalContent] = useState(null);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleModalOpen = (content) => {\r\n    setModalContent(content);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalContent(null);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  //TO DO : FA CARDURILE SA APARA FARA A DA REFRESH\r\n  const handleAddCard = () => {\r\n    handleModalOpen(\r\n      <CardForm\r\n        columnId={column._id}\r\n        handleClose={handleModalClose}\r\n        onSubmit={(cardData) => {\r\n          dispatch(addCard({ cardData, columnId: column._id }))\r\n            .unwrap()\r\n            .then((newCard) => {\r\n              console.log(\"Card added successfully:\", newCard);\r\n              // Actualizează starea locală (sau folosește Redux dacă e cazul)\r\n              dispatch(getCards(column._id)); // Sau actualizare locală dacă e necesar\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Failed to add card:\", error);\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  };\r\n  const handleDeleteCard = (cardId) => {\r\n    const columnId = column._id;\r\n\r\n    handleModalOpen(\r\n      <DeleteModal\r\n        title=\"Delete Card\"\r\n        message=\"Are you sure you want to delete this card?\"\r\n        handleModalClose={handleModalClose}\r\n        onConfirm={() =>\r\n          dispatch(deleteCard({ columnId, cardId }))\r\n            .unwrap()\r\n            .then(() => console.log(\"Card deleted successfully\"))\r\n            .catch((error) => console.error(\"Failed to delete card:\", error))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleEditCard = (card) => {\r\n    handleModalOpen(\r\n      <CardForm\r\n        card={card}\r\n        columnId={column._id}\r\n        handleClose={handleModalClose}\r\n        onSubmit={(cardData) => {\r\n          dispatch(\r\n            editCard({\r\n              updatedData: cardData, // Datele actualizate\r\n              columnId: column._id,\r\n              cardId: card._id,\r\n            })\r\n          )\r\n            .unwrap()\r\n            .then(() => {\r\n              console.log(\"Card edited successfully\");\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Failed to edit card:\", error);\r\n            });\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleEditColumn = () => {\r\n    handleModalOpen(\r\n      <AddColumnForm handleModalClose={handleModalClose} column={column} />\r\n    );\r\n  };\r\n\r\n  const handleMoveCard = (cardId, targetColumnId) => {\r\n    // Logica pentru mutarea unui card între coloane\r\n  };\r\n\r\n  const handleDeleteColumn = () => {\r\n    handleModalOpen(\r\n      <DeleteModal\r\n        title=\"Delete Column\"\r\n        message=\"Are you sure you want to delete this column?\"\r\n        handleModalClose={handleModalClose}\r\n        onConfirm={() =>\r\n          dispatch(deleteColumn(column._id))\r\n            .unwrap()\r\n            .then(() => console.log(\"Column deleted successfully\"))\r\n            .catch((error) => console.error(\"Failed to delete column:\", error))\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getCards(column._id));\r\n  }, [dispatch, column._id]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.columnNameContainer}>\r\n          <h3 className={styles.name}>{column.name}</h3>\r\n          <div className={styles.iconContainer}>\r\n            <Icon name={\"edit\"} size={16} handlerFunction={handleEditColumn} />\r\n            <Icon\r\n              name={\"delete\"}\r\n              size={16}\r\n              handlerFunction={handleDeleteColumn}\r\n            />\r\n          </div>\r\n        </div>\r\n        <CardList\r\n          cards={cards || []}\r\n          onEdit={handleEditCard}\r\n          onDelete={(cardId) => {\r\n            handleDeleteCard(cardId);\r\n          }}\r\n          onMove={handleMoveCard}\r\n        />\r\n\r\n        <div className={styles.addContainer}>\r\n          <Button extraClass={styles.button} handlerFunction={handleAddCard}>\r\n            <div className={styles.addIconContainer}>\r\n              <Icon name={\"plus\"} size={14} extraClass={styles.icon} />\r\n            </div>\r\n          </Button>\r\n          <p className={styles.text}>Add another card</p>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isVisible={isModalVisible}\r\n        handleModalClose={handleModalClose}\r\n        extraClass={styles.modal}\r\n      >\r\n        {modalContent}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getColumns } from \"../../redux/column/operators\";\r\nimport {\r\n  selectColumns,\r\n  selectIsLoading,\r\n  selectError,\r\n} from \"../../redux/column/selectors\";\r\nimport styles from \"./ProjectColumns.module.css\";\r\nimport Column from \"../Column/Column\";\r\nimport Button from \"../common/Button/Button\";\r\nimport Icon from \"../common/SvgIcon/SvgIcon\";\r\nimport Modal from \"../common/Modal/Modal\";\r\nimport AddColumnForm from \"../AddColumnForm/AddColumnForm\";\r\nimport { resetColumnsState } from \"../../redux/column/slice\";\r\n\r\nfunction ProjectColumns() {\r\n  const { id: projectId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const columns = useSelector(selectColumns);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  const [modalContent, setModalContent] = useState(null);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleModalOpen = (content) => {\r\n    setModalContent(content);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalContent(null);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    handleModalOpen(<AddColumnForm handleModalClose={handleModalClose} />);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(resetColumnsState());\r\n\r\n    if (projectId) {\r\n      dispatch(getColumns(projectId));\r\n    }\r\n    return;\r\n  }, [dispatch, projectId]);\r\n\r\n  if (isLoading) return <p>Loading columns...</p>;\r\n  if (error) return <p>Error loading columns: {error}</p>;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.column}>\r\n        {columns.map((column) => (\r\n          <Column key={column._id} column={column} />\r\n        ))}\r\n        <div className={styles.addContainer}>\r\n          <Button extraClass={styles.button} handlerFunction={handleAddColumn}>\r\n            <Icon name={\"plus\"} size={14} extraClass={styles.icon} />\r\n          </Button>\r\n          <p className={styles.text}> Add another column</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        isVisible={isModalVisible}\r\n        handleModalClose={handleModalClose}\r\n        extraClass={styles.modal}\r\n      >\r\n        {modalContent}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProjectColumns;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ProjectDetailsPage_title__YoI9W\",\"container\":\"ProjectDetailsPage_container__O-8Ad\"};","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProjectColumns from \"../../components/ProjectColumns/ProjectColumns\";\r\nimport styles from \"./ProjectDetailsPage.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectProject } from \"../../redux/project/selectors\";\r\n\r\nfunction ProjectDetailsPage() {\r\n  const { id } = useParams();\r\n  const projects = useSelector((state) => selectProject(state, id));\r\n\r\n  // Assuming that projects is an array, you want to find the project with the matching id\r\n  const project = projects?.find((p) => p._id === id);\r\n\r\n  // Construim ruta completă pentru fundal\r\n  const backgroundUrl = project?.background\r\n    ? `${process.env.PUBLIC_URL}/backgroundsImg/${project.background}.jpeg` // Assuming images are stored in public/backgrounds\r\n    : null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: backgroundUrl ? `url(${backgroundUrl})` : \"none\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        minHeight: \"100%\",\r\n        transition: \"background 0.3s ease\",\r\n      }}\r\n      className={styles.container}\r\n    >\r\n      <h2 className={styles.title}>Project Office</h2>\r\n\r\n      <ProjectColumns projectId={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetailsPage;\r\n"],"names":["selectColumns","state","columns","selectIsLoading","isLoading","selectError","error","_ref","card","onEdit","onDelete","onMove","priorityClass","concat","styles","priorityCircle","cardPriority","toLowerCase","_jsxs","className","cardContainer","children","detailsContainer","_jsx","title","cardName","text","cardDescription","container","secondContainer","priority","smallText","priorityStatus","status","deadline","Date","deadlineDate","toLocaleDateString","icons","Icon","name","size","handlerFunction","cards","_Fragment","map","Card","_id","columnId","handleClose","onSubmit","cardData","setCardData","useState","cardDeadline","isCalendarVisible","setIsCalendarVisible","handleChange","e","value","target","prevState","_objectSpread","handlePriorityChange","preventDefault","console","log","InputField","type","placeholder","required","textarea","onChange","priorityContainer","label","priorityOptions","priorityBubble","low","selected","onClick","medium","high","without","deadlineContainer","dateContainer","month","day","readOnly","dateInput","style","position","HiChevronDown","arrowIcon","DatePicker","date","minDate","dateFormat","reactDatePicker","todayButton","inline","Button","extraClass","button","iconContainer","icon","handleModalClose","column","id","projectId","useParams","dispatch","useDispatch","columnName","setColumnName","setError","useEffect","async","result","editColumn","updateData","_result$payload","rejected","match","payload","message","getColumns","addColumn","_result$payload2","err","onConfirm","useSelector","selectCardsByColumn","modalContent","setModalContent","isModalVisible","setModalVisible","handleModalOpen","content","getCards","columnNameContainer","handleEditColumn","AddColumnForm","handleDeleteColumn","DeleteModal","deleteColumn","unwrap","then","catch","CardList","CardForm","editCard","updatedData","cardId","deleteCard","handleDeleteCard","handleMoveCard","targetColumnId","addContainer","handleAddCard","addCard","newCard","addIconContainer","Modal","isVisible","modal","resetColumnsState","Column","handleAddColumn","projects","selectProject","project","find","p","backgroundUrl","background","process","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","minHeight","transition","ProjectColumns"],"sourceRoot":""}